Directory structure:
└── src/
    ├── App.css
    ├── App.tsx
    ├── index.css
    ├── main.tsx
    ├── vite-env.d.ts
    ├── assets/
    └── components/
        └── ui/
            ├── HardShadowButton.tsx
            ├── HardShadowCard.tsx
            ├── HardShadowRect.tsx
            └── HardShadowText.tsx

================================================
File: App.css
================================================
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}



================================================
File: App.tsx
================================================
import { HardShadowButton } from './components/ui/HardShadowButton.tsx';
import { HardShadowRect } from './components/ui/HardShadowRect.tsx';

function App() {

  return (
    <>
      <div className="h-dvh w-dvw">
        <div className="w-full h-full flex items-center justify-center gap-8">
          <HardShadowButton
            popUpContent={
              <HardShadowRect className="w-full bg-white pt-64 p-4">
                  henlooo
              </HardShadowRect>
            }
            popUpDistance={90}
          >
            <div className="p-10 bg-red-300">
              some content
            </div>
          </HardShadowButton>
          <HardShadowRect className="bg-white p-4">
            henlooo
          </HardShadowRect>
        </div>
      </div>
    </>
  )
}

export default App



================================================
File: index.css
================================================
@import "tailwindcss";



================================================
File: main.tsx
================================================
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.tsx'

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>,
)



================================================
File: vite-env.d.ts
================================================
/// <reference types="vite/client" />




================================================
File: components/ui/HardShadowButton.tsx
================================================
import { motion } from "motion/react";

type HardShadowButtonProps = {
  children: React.ReactNode;
  className?: string;
  popUpContent: React.ReactNode;
  popUpDirection?: "left" | "right" | "up" | "down"; 
  popUpDistance?: number;
} & React.ComponentProps<typeof motion.button>;

export function HardShadowButton({
  children,
  className = "",
  popUpContent,
  popUpDirection,
  popUpDistance = 40,
  ...props
}: HardShadowButtonProps) {
  return (
    <>
      <motion.button
        className={`relative cursor-pointer ${className}`}
        whileHover="hover"
        whileTap="tap"
        initial="rest"
        {...props}
      >
        <div className="bg-black opacity-1 top-0 left-0 pointer-events-none translate-y-2 translate-x-2 border-4 rounded-xl ">
          {children}
        </div>
        <div className="absolute brightness-0 top-0 left-0 translate-y-2 translate-x-2 border-4 rounded-xl border-black">
          {children}
        </div>
        { popUpContent && (
          <motion.div 
            className="absolute top-0 left-0 pt-4 pl-4 pr-2 w-full overflow-y-hidden"
            variants={{
              rest: { height: 0 }, 
              hover: { height: "auto" },
              tap: { height: 0 },
            }}
          >
            {popUpContent}
          </motion.div>
        )}
        <motion.div 
          className="origin-top-left absolute top-1 left-0 border-4 rounded-xl border-black overflow-hidden"
          variants={{
            rest: {
              rotate: 0,
              y: 0
            },
            hover: { rotate: -10 },
            tap: {
              y: 10, 
              rotate: 0
            }
          }}
        >
          {children}
        </motion.div>
      </motion.button>
    </>
  )
}



================================================
File: components/ui/HardShadowCard.tsx
================================================
import React from "react";

type HardShadowCardProps = {
  children: React.ReactNode;
};

export function HardShadowCard({
  children,
}: HardShadowCardProps) {
  return (
    <>
      <div className="relative">
        <div className="bg-black opacity-0 top-0 left-0 pointer-events-none translate-y-2 translate-x-2 border-4 rounded-xl ">
          {children}
        </div>
        <div className="absolute brightness-0 top-0 left-0 translate-y-2 translate-x-2 border-4 rounded-xl border-black">
          {children}
        </div>
        <div className="absolute top-0 left-0 border-4 rounded-xl border-black overflow-hidden">
          {children}
        </div>
      </div>
    </>
  )
}



================================================
File: components/ui/HardShadowRect.tsx
================================================
import React from "react";

type HardShadowRectProps = {
  children: React.ReactNode;
  className: string;
};

export function HardShadowRect({
  children,
  className="",
}: HardShadowRectProps) {
  return (
    <>
      <div className="relative">
        <div className={`bg-black opacity-0 top-0 left-0 pointer-events-none translate-y-2 translate-x-2 border-4 ${className}`}>
            {children}
        </div>
        <div className={`absolute brightness-0 top-0 left-0 translate-y-2 translate-x-2 border-4 border-black ${className}`}>
            {children}
        </div>
        <div className={`absolute top-0 left-0 border-4 border-black overflow-hidden ${className}`}>
            {children}
        </div>
      </div>
    </>
  )
}



================================================
File: components/ui/HardShadowText.tsx
================================================
import React from "react";

type HardShadowTextProps = {
  children: React.ReactNode;
  className?: string;
};

export function HardShadowText({
  children,
  className,
}: HardShadowTextProps) {
  return (
    <div className={className}>
      <div className="relative">
        <div className="opacity-0 top-0 left-0 pointer-events-none translate-y-1 translate-x-1">
          {children}
        </div>
        <div className="absolute brightness-0 top-0 left-0 translate-y-0.5 translate-x-0.5 ">
          {children}
        </div>
        <div className="absolute brightness-0 top-0 left-0 translate-y-1 translate-x-1 ">
          {children}
        </div>
        <div className="absolute top-0 left-0 ">
          {children}
        </div>
      </div>
    </div>
  )
}


